import pandas as pd
from aiogram import Bot
from aiogram.enums.parse_mode import ParseMode
from aiogram.types import File, Message
from sqlalchemy.ext.asyncio import AsyncSession

from db.orm_query import orm_add_source
from logger import logging


async def validate_file(file: File) -> bool:
    '''–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ñ–æ—Ä–º–∞—Ç –ø—Ä–∏—Å–ª–∞–Ω–Ω–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞.'''
    formats = ['.xlsx', '.xls']

    for format in formats:
        if format in file.file_path:
            return True
    return False


async def download_file(file: File, bot: Bot) -> str:
    '''–°–∫–∞—á–∏–≤–∞–µ—Ç —Ñ–∞–π–ª –ª–æ–∫–∞–ª—å–Ω–æ –≤ –ø–∞–ø–∫—É /documents'''
    await bot.download_file(file.file_path, file.file_path)
    logging.info(f'–§–∞–π–ª —É—Å–ø–µ—á–Ω–æ —Å–∫–∞—á–∞–Ω –ª–æ–∫–∞–ª—å–Ω–æ. '
                 f'–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ: {file.file_path}')
    return file.file_path


def format_row(row: pd.Series) -> str:
    '''–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å—Ç—Ä–æ–∫—É –≤ —á–∏—Ç–∞–±–µ–ª—å–Ω—ã–π –≤–∏–¥.'''
    title = row.get('title', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')
    url = row.get('url', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')
    xpath = row.get('xpath', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')

    return (
        f'üìå <b>–ù–∞–∑–≤–∞–Ω–∏–µ:</b> {title}\n'
        f'üîó <b>–°—Å—ã–ª–∫–∞:</b> {url}\n'
        f'üîç <b>–ü—É—Ç—å –∫ —Ü–µ–Ω–µ:</b> {xpath}\n'
    )


def get_text(df: pd.DataFrame) -> str:
    '''–°–æ–∑–¥–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–æ–ª—É—á–µ–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.'''
    message_text = '–§–∞–π–ª –ø–æ–ª—É—á–µ–Ω. –í–æ—Ç –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ:\n\n'
    message_text += '\n'.join(df.apply(format_row, axis=1))
    message_text += '\n\n–ü—Ä–∏—Å—Ç—É–ø–∞–µ–º –∫ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö –≤ –±–¥.'

    if len(message_text) > 4000:
        message_text = message_text[:4000] + '...\n\n('
        '–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –¥–∞–Ω–Ω—ã—Ö, –ø–æ–∫–∞–∑–∞–Ω—ã —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ —Å—Ç—Ä–æ–∫–∏)'
    return message_text


async def save_source_in_db(file_path: str,
                            session: AsyncSession,
                            message: Message) -> int:
    '''
    –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–∞–π–ª–∞ –≤ –±–¥,
    –∞ —Ç–∞–∫–∂–µ –≤—ã–≤–æ–¥–∏—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–∞–π–ª–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏.
    '''
    count = 0

    df = pd.read_excel(file_path)

    file_text = get_text(df.fillna("–ù–µ —É–∫–∞–∑–∞–Ω–æ"))

    await message.answer(
        file_text,
        parse_mode=ParseMode.HTML,
    )

    for index, row in df.iterrows():
        source = await orm_add_source(session, row, message)
        if source is True:
            count += 1

    return count
